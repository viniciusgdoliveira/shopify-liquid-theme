{% comment %}
  Enhanced product section with comprehensive features:
  - Image gallery with zoom and lightbox
  - Variant selector with price updates
  - Add to cart with quantity selector
  - Product information display
  - Social sharing
  - Pickup availability
  - Related products
{% endcomment %}

{% liquid
  assign current_variant = product.selected_or_first_available_variant
  assign product_form_id = 'product-form-' | append: section.id
  assign media_count = product.media.size
  if media_count > 0
    assign has_media = true
  else
    assign has_media = false
  endif
%}

<div class="product product--{{ section.settings.media_size }} product--{{ section.settings.gallery_layout }} product--media-{{ section.settings.media_position }} page-width">
  <div class="product__media-wrapper" data-media-gallery>
    {% if has_media %}
      <div class="product__media">
        {% for media in product.media %}
          <div class="product__media-item{% if forloop.first %} active{% endif %}" data-media-id="{{ media.id }}">
            {% case media.media_type %}
              {% when 'image' %}
                <div class="product__media-image">
                  {% if section.settings.image_zoom == 'lightbox' %}
                    <a href="{{ media | image_url: width: 2000 }}" class="product__media-zoom" data-lightbox="product-gallery">
                  {% endif %}
                    {% render 'image', 
                      image: media, 
                      class: 'product__image',
                      loading: 'eager',
                      sizes: '(min-width: 1200px) 50vw, 100vw'
                    %}
                  {% if section.settings.image_zoom == 'lightbox' %}
                    </a>
                  {% endif %}
                </div>
              {% when 'video' %}
                <div class="product__media-video">
                  {{ media | video_tag: 
                    image_size: '800x800',
                    autoplay: section.settings.enable_video_looping,
                    loop: section.settings.enable_video_looping,
                    controls: true,
                    muted: true
                  }}
                </div>
              {% when 'external_video' %}
                <div class="product__media-external-video">
                  {{ media | external_video_tag }}
                </div>
              {% when 'model' %}
                <div class="product__media-model">
                  {{ media | model_viewer_tag }}
                </div>
            {% endcase %}
          </div>
        {% endfor %}
      </div>

      {% if media_count > 1 %}
        <div class="product__media-thumbnails">
          {% for media in product.media %}
            <button class="product__media-thumbnail{% if forloop.first %} active{% endif %}" data-media-id="{{ media.id }}">
              {% render 'image', 
                image: media.preview_image, 
                class: 'product__thumbnail-image',
                sizes: '80px'
              %}
            </button>
          {% endfor %}
        </div>
      {% endif %}
    {% else %}
      <div class="product__media-placeholder">
        {{ 'product-1' | placeholder_svg_tag: 'product__placeholder' }}
      </div>
    {% endif %}
  </div>

  <div class="product__info">
    <div class="product__info-wrapper">
      {% if section.settings.show_vendor and product.vendor %}
        <div class="product__vendor">
          <span class="visually-hidden">{{ 'products.product.vendor' | t }}</span>
          {{ product.vendor | link_to: product.vendor | url_for_type: 'vendor' }}
        </div>
      {% endif %}

      <h1 class="product__title">{{ product.title | escape }}</h1>

      {% if section.settings.show_sku and current_variant.sku %}
        <div class="product__sku">
          <span class="visually-hidden">{{ 'products.product.sku' | t }}</span>
          {{ current_variant.sku }}
        </div>
      {% endif %}

      <div class="product__price" id="price-{{ section.id }}">
        {% if current_variant.compare_at_price > current_variant.price %}
          <span class="price price--sale">
            <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
            <s class="price__regular">{{ current_variant.compare_at_price | money }}</s>
            <span class="visually-hidden">{{ 'products.product.sale_price' | t }}</span>
            <span class="price__sale">{{ current_variant.price | money }}</span>
          </span>
        {% else %}
          <span class="price price--regular">
            <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
            {{ current_variant.price | money }}
          </span>
        {% endif %}
      </div>

      {% if product.description != blank %}
        <div class="product__description rte">
          {{ product.description }}
        </div>
      {% endif %}

      {% form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' %}
        <input type="hidden" name="id" value="{{ current_variant.id }}" disabled>

        {% unless product.has_only_default_variant %}
          <div class="product__variants">
            {% for option in product.options_with_values %}
              <fieldset class="product__option">
                <legend class="product__option-name">{{ option.name }}</legend>
                <div class="product__option-values">
                  {% for value in option.values %}
                    <input 
                      type="radio" 
                      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                      name="{{ option.name }}"
                      value="{{ value | escape }}"
                      form="{{ product_form_id }}"
                      {% if option.selected_value == value %}checked{% endif %}
                    >
                    <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                      {{ value }}
                    </label>
                  {% endfor %}
                </div>
              </fieldset>
            {% endfor %}
          </div>
        {% endunless %}

        <div class="product__quantity">
          <label for="Quantity-{{ section.id }}" class="visually-hidden">{{ 'products.product.quantity.label' | t }}</label>
          <div class="quantity-input">
            <button type="button" class="quantity-input__button quantity-input__button--minus" aria-label="{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}">
              {% render 'icons', icon: 'minus' %}
            </button>
            <input 
              type="number" 
              id="Quantity-{{ section.id }}"
              name="quantity" 
              min="1" 
              value="1" 
              class="quantity-input__input"
              form="{{ product_form_id }}"
            >
            <button type="button" class="quantity-input__button quantity-input__button--plus" aria-label="{{ 'products.product.quantity.increase' | t: product: product.title | escape }}">
              {% render 'icons', icon: 'plus' %}
            </button>
          </div>
        </div>

        <div class="product__buttons">
          <button
            type="submit"
            name="add"
            class="product__add-to-cart button button--primary button--full-width"
            {% if current_variant.available == false %}disabled{% endif %}
          >
            <span>
              {% if current_variant.available %}
                {{ 'products.product.add_to_cart' | t }}
              {% else %}
                {{ 'products.product.sold_out' | t }}
              {% endif %}
            </span>
            <div class="loading-overlay__spinner hidden">
              {% render 'icons', icon: 'spinner' %}
            </div>
          </button>

          {% if section.settings.show_payment_button %}
            {{ form | payment_button }}
          {% endif %}
        </div>

        {% if section.settings.enable_pickup_availability %}
          <div class="product__pickup-availability">
            {% render 'pickup-availability', variant: current_variant %}
          </div>
        {% endif %}
      {% endform %}

      {% if section.settings.show_share_buttons %}
        <div class="product__share">
          <span class="product__share-label">{{ 'products.product.share' | t }}</span>
          {% render 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_media %}
        </div>
      {% endif %}
    </div>
  </div>
</div>

{% stylesheet %}
.product {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  padding: 2rem 0;
}

@media screen and (min-width: 750px) {
  .product--media-left {
    grid-template-columns: 1fr 1fr;
  }
  
  .product--media-right {
    grid-template-columns: 1fr 1fr;
  }
  
  .product--media-right .product__media-wrapper {
    order: 2;
  }
}

.product__media {
  position: relative;
}

.product__media-item {
  display: none;
}

.product__media-item.active {
  display: block;
}

.product__image {
  width: 100%;
  height: auto;
  border-radius: 0.5rem;
}

.product__media-thumbnails {
  display: flex;
  gap: 0.5rem;
  margin-top: 1rem;
  overflow-x: auto;
}

.product__media-thumbnail {
  flex: 0 0 auto;
  border: 2px solid transparent;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: border-color 0.2s ease;
}

.product__media-thumbnail.active {
  border-color: var(--color-primary);
}

.product__thumbnail-image {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border-radius: 0.25rem;
}

.product__info-wrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.product__vendor {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
}

.product__title {
  font-size: 2rem;
  font-weight: 700;
  margin: 0;
  color: var(--color-text-primary);
}

.product__sku {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
}

.product__price {
  font-size: 1.5rem;
  font-weight: 600;
}

.price--sale .price__regular {
  text-decoration: line-through;
  color: var(--color-text-secondary);
}

.price--sale .price__sale {
  color: var(--color-sale);
}

.product__description {
  color: var(--color-text-secondary);
  line-height: 1.6;
}

.product__variants {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.product__option {
  border: none;
  padding: 0;
  margin: 0;
}

.product__option-name {
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--color-text-primary);
}

.product__option-values {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.product__option-values input[type="radio"] {
  position: absolute;
  opacity: 0;
}

.product__option-values label {
  padding: 0.5rem 1rem;
  border: 1px solid var(--color-border);
  border-radius: 0.25rem;
  cursor: pointer;
  transition: all 0.2s ease;
  background: var(--color-background);
}

.product__option-values input[type="radio"]:checked + label {
  background: var(--color-primary);
  color: var(--color-text-inverse);
  border-color: var(--color-primary);
}

.product__quantity {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.quantity-input {
  display: flex;
  align-items: center;
  border: 1px solid var(--color-border);
  border-radius: 0.25rem;
  overflow: hidden;
}

.quantity-input__button {
  padding: 0.5rem;
  border: none;
  background: var(--color-background-secondary);
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.quantity-input__button:hover {
  background: var(--color-background-tertiary);
}

.quantity-input__input {
  width: 4rem;
  padding: 0.5rem;
  border: none;
  text-align: center;
  background: var(--color-background);
}

.product__buttons {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.button--full-width {
  width: 100%;
}

.product__add-to-cart {
  padding: 1rem 2rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
}

.product__add-to-cart:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.product__share {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--color-border);
}

.product__share-label {
  font-weight: 600;
  color: var(--color-text-primary);
}

.loading-overlay__spinner {
  width: 1rem;
  height: 1rem;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.hidden {
  display: none;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
{% endstylesheet %}

{% javascript %}
class ProductForm extends HTMLElement {
  constructor() {
    super();
    this.form = this.querySelector('form');
    this.form.querySelector('[name=id]').disabled = false;
    this.form.addEventListener('submit', this.onSubmitHandler.bind(this));
    this.cartNotification = document.querySelector('cart-notification');
  }

  onSubmitHandler(evt) {
    evt.preventDefault();
    const submitButton = this.querySelector('[type="submit"]');
    if (submitButton.classList.contains('loading')) return;

    this.handleErrorMessage();
    this.cartNotification?.setActiveElement(document.activeElement);

    const config = fetchConfig('javascript');
    config.headers['X-Requested-With'] = 'XMLHttpRequest';
    delete config.headers['Content-Type'];

    const formData = new FormData(this.form);
    if (this.cartNotification) {
      formData.append('sections', this.cartNotification.getSectionsToRender().map(section => section.id));
      formData.append('sections_url', window.location.pathname);
      this.cartNotification.renderContents(formData);
    }

    submitButton.classList.add('loading');
    submitButton.querySelector('.loading-overlay__spinner').classList.remove('hidden');

    fetch(`${routes.cart_add_url}`, config)
      .then(response => response.json())
      .then(response => {
        if (response.status) {
          this.handleErrorMessage(response.description);
          return;
        }

        if (!this.cartNotification) {
          window.location = window.routes.cart_url;
          return;
        }

        this.cartNotification.renderContents(response);
        this.cartNotification.open();
      })
      .catch(e => {
        console.error(e);
      })
      .finally(() => {
        submitButton.classList.remove('loading');
        submitButton.querySelector('.loading-overlay__spinner').classList.add('hidden');
      });
  }

  handleErrorMessage(errorMessage = false) {
    this.errorMessageWrapper = this.errorMessageWrapper || this.querySelector('.product-form__error-message');
    this.errorMessage = this.errorMessage || this.errorMessageWrapper.querySelector('.error-message');

    this.errorMessageWrapper.toggleAttribute('hidden', !errorMessage);

    if (errorMessage) {
      this.errorMessage.textContent = errorMessage;
    }
  }
}

customElements.define('product-form', ProductForm);

// Variant selector
class VariantSelector extends HTMLElement {
  constructor() {
    super();
    this.addEventListener('change', this.onVariantChange);
  }

  onVariantChange() {
    this.updateOptions();
    this.updateMasterId();
    this.toggleAddButton(true, '', false);
    this.updatePickupAvailability();
    this.removeErrorMessage();

    if (!this.currentVariant) {
      this.toggleAddButton(true, '', true);
      this.setUnavailable();
    } else {
      this.updateMedia();
      this.updateURL();
      this.updateVariantInput();
      this.renderProductInfo();
    }
  }

  updateOptions() {
    this.options = Array.from(this.querySelectorAll('input[type="radio"]:checked'), input => {
      return input.value;
    });
  }

  updateMasterId() {
    this.currentVariant = this.getVariantData().find(variant => {
      return !variant.options.map((option, index) => {
        return this.options[index] === option;
      }).includes(false);
    });
  }

  updateMedia() {
    if (!this.currentVariant) return;
    if (!this.currentVariant.featured_media) return;

    const mediaGallery = document.querySelector(`[id^="MediaGallery-${this.dataset.section}"]`);
    if (!mediaGallery) return;

    const mediaId = `${this.dataset.section}-${this.currentVariant.featured_media.id}`;
    const activeMedia = mediaGallery.querySelector(`[data-media-id="${mediaId}"]`);
    if (!activeMedia) return;

    mediaGallery.querySelectorAll('[data-media-id]').forEach((item) => {
      item.classList.remove('active');
    });
    activeMedia.classList.add('active');
  }

  updateURL() {
    if (!this.currentVariant || this.dataset.updateUrl === 'false') return;
    window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
  }

  updateVariantInput() {
    const productForms = document.querySelectorAll(`#product-form-${this.dataset.section}, #product-form-installment`);
    productForms.forEach(productForm => {
      const input = productForm.querySelector('input[name="id"]');
      input.value = this.currentVariant.id;
      input.dispatchEvent(new Event('change', { bubbles: true }));
    });
  }

  updatePickupAvailability() {
    const pickUpAvailability = document.querySelector('pickup-availability');
    if (!pickUpAvailability) return;

    if (this.currentVariant && this.currentVariant.available) {
      pickUpAvailability.setAttribute('variant-id', this.currentVariant.id);
    } else {
      pickUpAvailability.removeAttribute('variant-id');
    }
  }

  removeErrorMessage() {
    const section = this.closest('section');
    if (!section) return;

    const productForm = section.querySelector('product-form');
    if (productForm) productForm.handleErrorMessage();
  }

  renderProductInfo() {
    fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
      .then((response) => response.text())
      .then((responseText) => {
        const html = new DOMParser().parseFromString(responseText, 'text/html');
        const destination = document.getElementById(`price-${this.dataset.section}`);
        const source = html.getElementById(`price-${this.dataset.section}`);
        if (source && destination) destination.innerHTML = source.innerHTML;

        const price = document.getElementById(`price-${this.dataset.section}`);

        if (price) price.classList.remove('visibility-hidden');
        this.toggleAddButton(!this.currentVariant.available, window.variantStrings.soldOut);
      });
  }

  toggleAddButton(disable = true, text, modifyClass = true) {
    const productForm = document.getElementById(`product-form-${this.dataset.section}`);
    if (!productForm) return;

    const addButton = productForm.querySelector('[name="add"]');
    const addButtonText = productForm.querySelector('[name="add"] > span');

    if (!addButton) return;

    if (disable) {
      addButton.setAttribute('disabled', 'disabled');
      if (text) addButtonText.textContent = text;
    } else {
      addButton.removeAttribute('disabled');
      addButtonText.textContent = window.variantStrings.addToCart;
    }

    if (!modifyClass) return;
  }

  setUnavailable() {
    const button = document.getElementById(`product-form-${this.dataset.section}`)?.querySelector('[name="add"]');
    if (!button) return;
    button.setAttribute('disabled', 'disabled');
    button.textContent = window.variantStrings.unavailable;
  }

  getVariantData() {
    this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
    return this.variantData;
  }
}

customElements.define('variant-selector', VariantSelector);

// Quantity selector
class QuantityInput extends HTMLElement {
  constructor() {
    super();
    this.input = this.querySelector('input');
    this.changeEvent = new Event('change', { bubbles: true });

    this.querySelectorAll('button').forEach(
      (button) => button.addEventListener('click', this.onButtonClick.bind(this))
    );
  }

  onButtonClick(event) {
    event.preventDefault();
    const previousValue = this.input.value;

    event.target.name === 'plus' ? this.input.stepUp() : this.input.stepDown();
    if (previousValue !== this.input.value) this.input.dispatchEvent(this.changeEvent);
  }
}

customElements.define('quantity-input', QuantityInput);

// Media gallery navigation
document.addEventListener('DOMContentLoaded', function() {
  const mediaGallery = document.querySelector('[data-media-gallery]');
  if (!mediaGallery) return;
  
  const mediaItems = mediaGallery.querySelectorAll('.product__media-item');
  const thumbnails = mediaGallery.querySelectorAll('.product__media-thumbnail');
  
  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener('click', (e) => {
      e.preventDefault();
      const mediaId = thumbnail.dataset.mediaId;
      
      // Show selected media
      mediaItems.forEach(item => {
        item.classList.remove('active');
        if (item.dataset.mediaId === mediaId) {
          item.classList.add('active');
        }
      });
      
      // Update active thumbnail
      thumbnails.forEach(thumb => {
        thumb.classList.remove('active');
      });
      thumbnail.classList.add('active');
    });
  });
});
{% endjavascript %}

{% schema %}
{
  "name": "t:general.product",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "default": true,
      "label": "t:sections.main-product.settings.enable_zoom.label"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-product.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "default": false,
      "label": "t:sections.main-product.settings.show_sku.label"
    },
    {
      "type": "checkbox",
      "id": "show_type",
      "default": false,
      "label": "t:sections.main-product.settings.show_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "default": false,
      "label": "t:sections.main-product.settings.show_tags.label"
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "default": true,
      "label": "t:sections.main-product.settings.show_share_buttons.label"
    },
    {
      "type": "checkbox",
      "id": "enable_pickup_availability",
      "default": true,
      "label": "t:sections.main-product.settings.enable_pickup_availability.label"
    },
    {
      "type": "checkbox",
      "id": "show_payment_button",
      "default": true,
      "label": "t:sections.main-product.settings.show_payment_button.label"
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
